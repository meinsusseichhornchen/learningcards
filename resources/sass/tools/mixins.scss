/* ------------------------------------------------------- */

/* ----------------
 * ----- Misc -----
 * ----------------
 */

/// Mixin to prefix several properties at once
/// @author Hugo Giraudel
/// @param {Map} $declarations - Declarations to prefix
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($declarations, $prefixes: ()) {
  @each $property, $value in $declarations {
    @each $prefix in $prefixes {
      #{'-' + $prefix + '-' + $property}: $value;
    }

    // Output standard non-prefixed declaration
    #{$property}: $value;
  }
}

/* ------------------------------------------------------- */

/* ----------------
 * --- Flexbox ----
 * ----------------
 */

@mixin flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin inline-flex {
  display: -webkit-inline-flex;
  display: -moz-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
    -moz-box-direction: reverse;
    -moz-box-orient: horizontal;
  } @else if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -moz-box-direction: normal;
    -moz-box-orient: vertical;
  } @else if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
    -moz-box-direction: reverse;
    -moz-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
    -moz-box-direction: normal;
    -moz-box-orient: horizontal;
  }

  -webkit-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}

@mixin flex-wrap($value: mowrap) {
  -webkit-flex-wrap: $value;
  @if ($value == nowrap) {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
    -moz-box-align: start;
    -ms-box-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
    -moz-box-align: end;
    -ms-box-align: end;
  } @else {
    -webkit-box-align: $value;
    -moz-box-align: $value;
    -ms-box-align: $value;
  }

  -webkit-align-items: $value;
  align-items: $value;
}

@mixin justify-content($value) {
  @if $value == space-between {
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    -ms-flex-pack: justify;
  }
  justify-content: $value;
  -webkit-justify-content: $value;
}

@mixin align-content($value: stretch) {
  // No Webkit Box Fallback.
  -webkit-align-content: $value;
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content: $value;
}

@mixin align-self($value: auto) {
  // No Webkit Box Fallback.
  -webkit-align-self: $value;
  @if $value == flex-start {
    -ms-flex-item-align: start;
  } @else if $value == flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }
  align-self: $value;
}

/* ------------------------------------------------------- */

/* ----------------
 * ---- Shapes ----
 * ----------------
 */

%rounded-background {
  border-radius: 25px;
}

%d2-centered {
  position: absolute;
  right: 50%;
  bottom: 50%;
  @include prefix((
    transform: translate(50%, 50%),
  ))
}

%clickable {
  cursor: pointer;
}

%centered-vertically {
  position: absolute;
  right: 0;
  bottom: 50%;
  @include prefix((
    transform: translateY(50%),
  ))
}

/* ------------------------------------------------------- */

/* ----------------
 * - Transitions --
 * ----------------
 */
@mixin transition($x...) {
  -webkit-transition: $x;
  -moz-transition: $x;
  -o-transition: $x;
  transition: $x;
}